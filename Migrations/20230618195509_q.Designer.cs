// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockExchange.Models;

namespace StockExchange.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230618195509_q")]
    partial class q
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockExchange.Models.DbModels.FinancialInstrumnent", b =>
                {
                    b.Property<int>("instrument_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("instrument_amount")
                        .HasColumnType("int");

                    b.Property<int>("instrument_category_id")
                        .HasColumnType("int");

                    b.Property<string>("instrument_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("instrument_price")
                        .HasColumnType("int");

                    b.Property<DateTime>("last_updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("instrument_id");

                    b.HasIndex("instrument_category_id");

                    b.HasIndex("user_id");

                    b.ToTable("FinancialInstrument");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.FinancialInstrumnentCategory", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("category_id");

                    b.ToTable("FinancialInstrumnentCategories");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.Operations", b =>
                {
                    b.Property<int>("operation_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("operation_amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("operation_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("operation_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("operation_id");

                    b.HasIndex("user_id");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.Role", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("role_id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.Transaction", b =>
                {
                    b.Property<int>("transaction_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("receiver_id")
                        .HasColumnType("int");

                    b.Property<int>("sender_id")
                        .HasColumnType("int");

                    b.Property<int>("transaction_amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("transaction_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("transaction_id");

                    b.HasIndex("user_id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id");

                    b.HasIndex("role_id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.UserBalance", b =>
                {
                    b.Property<int>("balance_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("balance_amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("last_updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("balance_id");

                    b.HasIndex("user_id");

                    b.ToTable("UserBalance");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.UserReport", b =>
                {
                    b.Property<int>("report_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date_created")
                        .HasColumnType("datetime2");

                    b.Property<string>("report_text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("report_id");

                    b.HasIndex("user_id");

                    b.ToTable("UserReport");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.FinancialInstrumnent", b =>
                {
                    b.HasOne("StockExchange.Models.DbModels.FinancialInstrumnentCategory", "FinancialInstumentCategory")
                        .WithMany()
                        .HasForeignKey("instrument_category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockExchange.Models.DbModels.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialInstumentCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.Operations", b =>
                {
                    b.HasOne("StockExchange.Models.DbModels.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.Transaction", b =>
                {
                    b.HasOne("StockExchange.Models.DbModels.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.User", b =>
                {
                    b.HasOne("StockExchange.Models.DbModels.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.UserBalance", b =>
                {
                    b.HasOne("StockExchange.Models.DbModels.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.UserReport", b =>
                {
                    b.HasOne("StockExchange.Models.DbModels.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockExchange.Models.DbModels.Role", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
